{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchHas = matchHas;\nexports.compileNonPath = compileNonPath;\nexports.prepareDestination = prepareDestination;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _pathToRegexp = require(\"next/dist/compiled/path-to-regexp\");\nvar _escapeRegexp = require(\"../../escape-regexp\");\nvar _parseUrl = require(\"./parse-url\");\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName) {\n  let newParamName = '';\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i);\n    if (charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 // a-z\n    ) {\n      newParamName += paramName[i];\n    }\n  }\n  return newParamName;\n}\nfunction escapeSegment(str, segmentName) {\n  return str.replace(new RegExp(`:${(0, _escapeRegexp).escapeStringRegexp(segmentName)}`, 'g'), `__ESC_COLON_${segmentName}`);\n}\nfunction unescapeSegments(str) {\n  return str.replace(/__ESC_COLON_/gi, ':');\n}\nfunction matchHas(req, query) {\n  let has = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let missing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  const params = {};\n  const hasMatch = hasItem => {\n    let value;\n    let key = hasItem.key;\n    switch (hasItem.type) {\n      case 'header':\n        {\n          key = key.toLowerCase();\n          value = req.headers[key];\n          break;\n        }\n      case 'cookie':\n        {\n          value = req.cookies[hasItem.key];\n          break;\n        }\n      case 'query':\n        {\n          value = query[key];\n          break;\n        }\n      case 'host':\n        {\n          const {\n            host\n          } = (req == null ? void 0 : req.headers) || {};\n          // remove port from host if present\n          const hostname = host == null ? void 0 : host.split(':')[0].toLowerCase();\n          value = hostname;\n          break;\n        }\n      default:\n        {\n          break;\n        }\n    }\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key)] = value;\n      return true;\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`);\n      const matches = Array.isArray(value) ? value.slice(-1)[0].match(matcher) : value.match(matcher);\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach(groupKey => {\n              params[groupKey] = matches.groups[groupKey];\n            });\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0];\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n  const allMatch = has.every(item => hasMatch(item)) && !missing.some(item => hasMatch(item));\n  if (allMatch) {\n    return params;\n  }\n  return false;\n}\nfunction compileNonPath(value, params) {\n  if (!value.includes(':')) {\n    return value;\n  }\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value.replace(new RegExp(`:${key}\\\\*`, 'g'), `:${key}--ESCAPED_PARAM_ASTERISKS`).replace(new RegExp(`:${key}\\\\?`, 'g'), `:${key}--ESCAPED_PARAM_QUESTION`).replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`).replace(new RegExp(`:${key}(?!\\\\w)`, 'g'), `--ESCAPED_PARAM_COLON${key}`);\n    }\n  }\n  value = value.replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1').replace(/--ESCAPED_PARAM_PLUS/g, '+').replace(/--ESCAPED_PARAM_COLON/g, ':').replace(/--ESCAPED_PARAM_QUESTION/g, '?').replace(/--ESCAPED_PARAM_ASTERISKS/g, '*');\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return (0, _pathToRegexp).compile(`/${value}`, {\n    validate: false\n  })(params).slice(1);\n}\nfunction prepareDestination(args) {\n  const query = Object.assign({}, args.query);\n  delete query.__nextLocale;\n  delete query.__nextDefaultLocale;\n  delete query.__nextDataReq;\n  let escapedDestination = args.destination;\n  for (const param of Object.keys(_extends({}, args.params, query))) {\n    escapedDestination = escapeSegment(escapedDestination, param);\n  }\n  const parsedDestination = (0, _parseUrl).parseUrl(escapedDestination);\n  const destQuery = parsedDestination.query;\n  const destPath = unescapeSegments(`${parsedDestination.pathname}${parsedDestination.hash || ''}`);\n  const destHostname = unescapeSegments(parsedDestination.hostname || '');\n  const destPathParamKeys = [];\n  const destHostnameParamKeys = [];\n  (0, _pathToRegexp).pathToRegexp(destPath, destPathParamKeys);\n  (0, _pathToRegexp).pathToRegexp(destHostname, destHostnameParamKeys);\n  const destParams = [];\n  destPathParamKeys.forEach(key => destParams.push(key.name));\n  destHostnameParamKeys.forEach(key => destParams.push(key.name));\n  const destPathCompiler = (0, _pathToRegexp).compile(destPath,\n  // we don't validate while compiling the destination since we should\n  // have already validated before we got to this point and validating\n  // breaks compiling destinations with named pattern params from the source\n  // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n  // since compile validation is meant for reversing and not for inserting\n  // params from a separate path-regex into another\n  {\n    validate: false\n  });\n  const destHostnameCompiler = (0, _pathToRegexp).compile(destHostname, {\n    validate: false\n  });\n  // update any params in query values\n  for (const [key1, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key1] = strOrArray.map(value => compileNonPath(unescapeSegments(value), args.params));\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key1] = compileNonPath(unescapeSegments(strOrArray), args.params);\n    }\n  }\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(name => name !== 'nextInternalLocale');\n  if (args.appendParamsToQuery && !paramKeys.some(key => destParams.includes(key))) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key];\n      }\n    }\n  }\n  let newUrl;\n  try {\n    newUrl = destPathCompiler(args.params);\n    const [pathname, hash] = newUrl.split('#');\n    parsedDestination.hostname = destHostnameCompiler(args.params);\n    parsedDestination.pathname = pathname;\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`;\n    delete parsedDestination.search;\n  } catch (err) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(`To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`);\n    }\n    throw err;\n  }\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = _extends({}, query, parsedDestination.query);\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination\n  };\n}","map":{"version":3,"names":["matchHas","compileNonPath","prepareDestination","_pathToRegexp","require","_escapeRegexp","_parseUrl","getSafeParamName","paramName","newParamName","i","length","charCode","charCodeAt","escapeSegment","str","segmentName","replace","RegExp","escapeStringRegexp","unescapeSegments","req","query","has","arguments","undefined","missing","params","hasMatch","hasItem","value","key","type","toLowerCase","headers","cookies","host","hostname","split","matcher","matches","Array","isArray","slice","match","groups","Object","keys","forEach","groupKey","allMatch","every","item","some","includes","compile","validate","args","assign","__nextLocale","__nextDefaultLocale","__nextDataReq","escapedDestination","destination","param","_extends","parsedDestination","parseUrl","destQuery","destPath","pathname","hash","destHostname","destPathParamKeys","destHostnameParamKeys","pathToRegexp","destParams","push","name","destPathCompiler","destHostnameCompiler","key1","strOrArray","entries","map","paramKeys","filter","appendParamsToQuery","newUrl","search","err","message","Error"],"sources":["../../../../../src/shared/lib/router/utils/prepare-destination.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
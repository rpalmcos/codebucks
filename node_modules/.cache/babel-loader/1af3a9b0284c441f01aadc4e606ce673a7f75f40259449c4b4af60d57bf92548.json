{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = exports.encode = void 0;\n// original source: https://github.com/niklasvh/base64-arraybuffer/blob/master/src/index.ts\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = arraybuffer => {\n  let bytes = new Uint8Array(arraybuffer),\n    i1,\n    len = bytes.length,\n    base64 = '';\n  for (i1 = 0; i1 < len; i1 += 3) {\n    base64 += chars[bytes[i1] >> 2];\n    base64 += chars[(bytes[i1] & 3) << 4 | bytes[i1 + 1] >> 4];\n    base64 += chars[(bytes[i1 + 1] & 15) << 2 | bytes[i1 + 2] >> 6];\n    base64 += chars[bytes[i1 + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n  return base64;\n};\nexports.encode = encode;\nconst decode = base64 => {\n  let bufferLength = base64.length * 0.75,\n    len = base64.length,\n    i2,\n    p = 0,\n    encoded1,\n    encoded2,\n    encoded3,\n    encoded4;\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n  const arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n  for (i2 = 0; i2 < len; i2 += 4) {\n    encoded1 = lookup[base64.charCodeAt(i2)];\n    encoded2 = lookup[base64.charCodeAt(i2 + 1)];\n    encoded3 = lookup[base64.charCodeAt(i2 + 2)];\n    encoded4 = lookup[base64.charCodeAt(i2 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};\nexports.decode = decode;","map":{"version":3,"names":["chars","lookup","Uint8Array","i","length","charCodeAt","encode","arraybuffer","bytes","i1","len","base64","substring","decode","bufferLength","i2","p","encoded1","encoded2","encoded3","encoded4","ArrayBuffer"],"sources":["../../../../src/shared/lib/bloom-filter/base64-arraybuffer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fnv1a;\nfunction fnv1a(inputString) {\n  let {\n    size = 32,\n    seed = 0\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!FNV_PRIMES[size]) {\n    throw new Error('The `size` option must be one of 32, 64, 128, 256, 512, or 1024');\n  }\n  let hash = FNV_OFFSETS[size] ^ BigInt(seed);\n  const fnvPrime = FNV_PRIMES[size];\n  // Handle Unicode code points > 0x7f\n  let isUnicoded = false;\n  for (let index = 0; index < inputString.length; index++) {\n    let characterCode = inputString.charCodeAt(index);\n    // Non-ASCII characters trigger the Unicode escape logic\n    if (characterCode > 0x7f && !isUnicoded) {\n      inputString = unescape(encodeURIComponent(inputString));\n      characterCode = inputString.charCodeAt(index);\n      isUnicoded = true;\n    }\n    hash ^= BigInt(characterCode);\n    hash = BigInt.asUintN(size, hash * fnvPrime);\n  }\n  return hash;\n}\n// source: https://github.com/sindresorhus/fnv1a\n// FNV_PRIMES and FNV_OFFSETS from\n// http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param\nconst FNV_PRIMES = {\n  32: BigInt(16777619),\n  64: BigInt(1099511628211),\n  128: BigInt(309485009821345068724781371),\n  256: BigInt(374144419156711147060143317175368453031918731002211),\n  512: BigInt(35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759),\n  1024: BigInt(5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573)\n};\nconst FNV_OFFSETS = {\n  32: BigInt(2166136261),\n  64: BigInt(14695981039346656037),\n  128: BigInt(144066263297769815596495629667062367629),\n  256: BigInt(100029257958052580907070968620625704837092796014241193945225284501741471925557),\n  512: BigInt(9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785),\n  1024: BigInt(14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915)\n};","map":{"version":3,"names":["fnv1a","inputString","size","seed","arguments","length","undefined","FNV_PRIMES","Error","hash","FNV_OFFSETS","BigInt","fnvPrime","isUnicoded","index","characterCode","charCodeAt","unescape","encodeURIComponent","asUintN"],"sources":["../../../src/shared/lib/fnv1a.ts"],"sourcesContent":[null],"mappings":"AAIA;;;;;kBA8BwBA,KAAK;AAAd,SAASA,KAAKA,CAC3BC,WAAmB,EAQnB;EAAA,IAPA;IACEC,IAAI,GAAG,EAAE;IACTC,IAAI,GAAG;EAAC,CAIT,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAEN,IAAI,CAACG,UAAU,CAACL,IAAI,CAAC,EAAE;IACrB,MAAM,IAAIM,KAAK,CACb,iEAAiE,CAClE;;EAGH,IAAIC,IAAI,GAAWC,WAAW,CAACR,IAAI,CAAC,GAAGS,MAAM,CAACR,IAAI,CAAC;EACnD,MAAMS,QAAQ,GAAGL,UAAU,CAACL,IAAI,CAAC;EAEjC;EACA,IAAIW,UAAU,GAAG,KAAK;EAEtB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGb,WAAW,CAACI,MAAM,EAAES,KAAK,EAAE,EAAE;IACvD,IAAIC,aAAa,GAAGd,WAAW,CAACe,UAAU,CAACF,KAAK,CAAC;IAEjD;IACA,IAAIC,aAAa,GAAG,IAAI,IAAI,CAACF,UAAU,EAAE;MACvCZ,WAAW,GAAGgB,QAAQ,CAACC,kBAAkB,CAACjB,WAAW,CAAC,CAAC;MACvDc,aAAa,GAAGd,WAAW,CAACe,UAAU,CAACF,KAAK,CAAC;MAC7CD,UAAU,GAAG,IAAI;;IAGnBJ,IAAI,IAAIE,MAAM,CAACI,aAAa,CAAC;IAC7BN,IAAI,GAAGE,MAAM,CAACQ,OAAO,CAACjB,IAAI,EAAEO,IAAI,GAAGG,QAAQ,CAAC;;EAG9C,OAAOH,IAAI;;AAtEb;AACA;AACA;AAEA,MAAMF,UAAU,GAAG;EACjB,EAAE,EAAEI,MAAM,CAAC,QAAU,CAAC;EACtB,EAAE,EAAEA,MAAM,CAAC,aAAiB,CAAC;EAC7B,GAAG,EAAEA,MAAM,CAAC,2BAAmC,CAAC;EAChD,GAAG,EAAEA,MAAM,CACT,mDAAmE,CACpE;EACD,GAAG,EAAEA,MAAM,CACT,wGAA0I,CAC3I;EACD,IAAI,EAAEA,MAAM,CACV,6MAAiR;CAEpR;AAED,MAAMD,WAAW,GAAG;EAClB,EAAE,EAAEC,MAAM,CAAC,UAAa,CAAC;EACzB,EAAE,EAAEA,MAAM,CAAC,oBAA0B,CAAC;EACtC,GAAG,EAAEA,MAAM,CAAC,uCAAmD,CAAC;EAChE,GAAG,EAAEA,MAAM,CACT,8EAAuG,CACxG;EACD,GAAG,EAAEA,MAAM,CACT,0JAA6M,CAC9M;EACD,IAAI,EAAEA,MAAM,CACV,+RAA8X;CAEjY"},"metadata":{},"sourceType":"script","externalDependencies":[]}